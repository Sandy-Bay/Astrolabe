name: Validate Tests

on:
  pull_request:
    branches: ["main"]
  workflow_call:
    inputs:
      os:
        description: 'Operating system (windows-latest or ubuntu-latest)'
        required: true
        type: string
      configuration:
        description: 'Build configuration (Debug or Release)'
        required: true
        type: string

jobs:
  Validate-Tests:
    runs-on: ${{ inputs.os }}
    env:
      Solution_Name: Astrolabe-Backend/Astrolabe-Backend.sln
      Test_Project_Path: Astrolabe-Backend.Tests/Astrolabe-Backend.Tests.csproj
    steps:
      # Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install .NET Core
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # Add MSBuild to Path
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        if: runner.os == 'Windows'

      # Cache the NuGet packages to improve run-speed
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Restore the dependencies
      - name: Restore Dependencies
        run: dotnet restore ${{ env.Solution_Name }}

      # Execute all unit tests in the solution
      - name: Run Tests
        run: dotnet test ${{ env.Test_Project_Path }} --configuration ${{ inputs.configuration }} --no-restore --logger trx --results-directory TestResults

      # Upload test results as an artifact
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ inputs.os }}-${{ inputs.configuration }}
          path: TestResults
